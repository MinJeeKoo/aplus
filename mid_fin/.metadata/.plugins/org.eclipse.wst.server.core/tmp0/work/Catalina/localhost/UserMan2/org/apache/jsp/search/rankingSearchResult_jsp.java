/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.20
 * Generated at: 2019-11-24 16:22:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.search;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import model.*;
import model.ForSearchList;

public final class rankingSearchResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/MIN%20JEE%20KOO/Desktop/mid_fin/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/UserMan2/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1571033416994L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("model.ForSearchList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   @SuppressWarnings("unchecked") 
   List<ForSearchList> searchList = (List<ForSearchList>)request.getAttribute("getSearchList");

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>search_result_List</title>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<link rel=stylesheet href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=#FFFFFF text=#000000 leftmargin=0 topmargin=0 marginwidth=0 marginheight=0>\r\n");
      out.write("<br>\r\n");
      out.write("<table style=\"width:100%\">\r\n");
      out.write("  <tr><td>&nbsp;</td><td>&nbsp;</td></tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("   <td width=\"20\"></td>\r\n");
      out.write("   <td>\r\n");
      out.write("     <table>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td bgcolor=\"f4f4f4\" height=\"22\">&nbsp;&nbsp;<b>search_result_List</b>&nbsp;&nbsp;</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("      <td>\r\n");
      out.write("      ");
 String category = (String)request.getAttribute("category");
      String field = (String)request.getAttribute("field");
      String dept = (String)request.getAttribute("dept");
      out.write("\r\n");
      out.write("      ");
      out.print("<사용자가 검색한 값>" );
      out.write("\r\n");
      out.write("      </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("      <td>\r\n");
      out.write("      ");

      if(category.equals("annual_income"))
    		  out.println(" 카테고리: 연봉");
    	else if(category.equals("department_mood"))
    		   out.println(" 카테고리: 부서 분위기");
    	else if(category.equals("job_satisfaction_r"))
 		   out.println(" 카테고리: 직업 만족도");
    	else if(category.equals("traffic_convenience"))
 		   out.println(" 카테고리: 교통편의성");
    	else if(category.equals("cafeteria"))
  		   out.println(" 카테고리: 구내식당");
    	else 
   		   out.println(" 카테고리: 직원복지");
      
      out.write("\r\n");
      out.write("      </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      \r\n");
      out.write("      <tr>\r\n");
      out.write("      <td>\r\n");
      out.write("      ");
      out.print( " 분야: " + field);
      out.write("\r\n");
      out.write("      </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      \r\n");
      out.write("      <tr>\r\n");
      out.write("      <td>\r\n");
      out.write("      ");
      out.print(" 부서: " + dept);
      out.write("\r\n");
      out.write("      </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("     </table>  \r\n");
      out.write("     <br>        \r\n");
      out.write("     <table style=\"background-color: YellowGreen\">\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td width=\"200\" align=\"center\" bgcolor=\"E6ECDE\">순위</td>\r\n");
      out.write("        <td width=\"190\" align=\"center\" bgcolor=\"E6ECDE\" height=\"22\">회사명</td>\r\n");
      out.write("        <td width=\"200\" align=\"center\" bgcolor=\"E6ECDE\">부서명</td>\r\n");
      out.write("        <td width=\"200\" align=\"center\" bgcolor=\"E6ECDE\">평균점수</td>\r\n");
      out.write("       \r\n");
      out.write("      </tr>\r\n");

   
   // 주의: 아래와 같은 scriptlet은 생략하고 <c:for-each>와 EL로 구현하는 것이 바람직함 (list2.jsp 참조)
   if (searchList != null) {   
     Iterator<ForSearchList> userIter = searchList.iterator();
   
     int i = 0;
     int compare = -1;
     //사용자 리스트를 클라이언트에게 보여주기 위하여 출력.
     while ( userIter.hasNext() ) {
        ForSearchList user = (ForSearchList)userIter.next();
   

      out.write("           \r\n");
      out.write("      <tr>\r\n");
      out.write("      <td width=\"190\" align=\"center\" bgcolor=\"ffffff\" height=\"20\">\r\n");
      out.write("         ");
if(compare != user.getSearch_category())
         i++;
      out.write("\r\n");
      out.write("         ");
      out.print(i);
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("        <td width=\"190\" align=\"center\" bgcolor=\"ffffff\" height=\"20\">\r\n");
      out.write("         ");
      out.print(user.getC_name());
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("        <td width=\"200\" bgcolor=\"ffffff\" style=\"padding-left: 10\">\r\n");
      out.write("           ");
      out.print(user.getCfd_name());
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("        <td width=\"200\" align=\"center\" bgcolor=\"ffffff\" height=\"20\">\r\n");
      out.write("           ");
      out.print(user.getSearch_category());
      out.write("\r\n");
      out.write("           \r\n");
      out.write("        </td>\r\n");
      out.write("      </tr>\r\n");

   ForSearchList before_user = user;
   compare = before_user.getSearch_category();
     }
   }

      out.write("   \r\n");
      out.write("     </table>         \r\n");
      out.write("   </td>\r\n");
      out.write("  </tr>\r\n");
      out.write("</table> \r\n");
      out.write("<br>\r\n");
      out.write("     <a href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\">뒤로가기</a>\r\n");
      out.write("     </td> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /search/rankingSearchResult.jsp(13,27) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/css/user.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /search/rankingSearchResult.jsp(115,14) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/search/rankingSearch");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }
}
